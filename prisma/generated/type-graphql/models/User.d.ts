import { Account } from "../models/Account";
import { Premise } from "../models/Premise";
import { ReactionOnThreads } from "../models/ReactionOnThreads";
import { ReactionOnTimelines } from "../models/ReactionOnTimelines";
import { ReactionOnVisions } from "../models/ReactionOnVisions";
import { Session } from "../models/Session";
import { SubscriptionsOnPremises } from "../models/SubscriptionsOnPremises";
import { SubscriptionsOnTimelines } from "../models/SubscriptionsOnTimelines";
import { Thread } from "../models/Thread";
import { Timeline } from "../models/Timeline";
import { Vision } from "../models/Vision";
import { VisionViewsHistory } from "../models/VisionViewsHistory";
import { VotesOnPremise } from "../models/VotesOnPremise";
import { VotesOnThread } from "../models/VotesOnThread";
import { VotesOnTimeline } from "../models/VotesOnTimeline";
import { VotesOnVision } from "../models/VotesOnVision";
import { UserCount } from "../resolvers/outputs/UserCount";
export declare class User {
    id: string;
    name?: string | null;
    email?: string | null;
    emailVerified?: Date | null;
    updatedAt?: Date | null;
    image?: string | null;
    accounts?: Account[];
    sessions?: Session[];
    premises?: Premise[];
    threads?: Thread[];
    visions?: Vision[];
    timelines?: Timeline[];
    reactionOnThreads?: ReactionOnThreads[];
    reactionOnTimelines?: ReactionOnTimelines[];
    reactionOnVisions?: ReactionOnVisions[];
    votesOnVision?: VotesOnVision[];
    votesOnTimeline?: VotesOnTimeline[];
    votesOnPremise?: VotesOnPremise[];
    votesOnThread?: VotesOnThread[];
    subscriptionsOnPremises?: SubscriptionsOnPremises[];
    subscriptionsOnTimelines?: SubscriptionsOnTimelines[];
    visionViewsHistory?: VisionViewsHistory[];
    _count?: UserCount | null;
}
