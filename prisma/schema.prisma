datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  email     String     @unique
  name      String?
  role      Role       @default(USER)
  posts     Premise[]
  Vision    Vision[]
  Timeline  Timeline[]
}

model Premise {
  id           String        @id @default(uuid())
  title        String        @db.VarChar(255)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  status       PremiseStatus
  activityDate DateTime

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  timelines      PremisesOnTimelines[]
  Vision         Vision[]
  TagsOnPremises TagsOnPremises[]
}

model Vision {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(255)
  description String
  createdAt   DateTime @default(now())
  reference   String

  author    User    @relation(fields: [authorId], references: [id])
  authorId  String
  premise   Premise @relation(fields: [premiseId], references: [id])
  premiseId String

}

model Timeline {
  id          String @id @default(uuid())
  title       String @db.VarChar(255)
  description String
  status      String
  author      User   @relation(fields: [authorId], references: [id])
  authorId    String

  premises PremisesOnTimelines[]

  TagsOnTimelines TagsOnTimelines[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  label String @db.VarChar(255)

  TagsOnPremises  TagsOnPremises[]
  TagsOnTimelines TagsOnTimelines[]
}

model TagsOnPremises {
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
  premise    Premise  @relation(fields: [premiseId], references: [id])
  premiseId  String
  assignedAt DateTime @default(now())

  @@id([tagId, premiseId])
}

model TagsOnTimelines {
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
  premise    Timeline @relation(fields: [premiseId], references: [id])
  premiseId  String
  assignedAt DateTime @default(now())

  @@id([tagId, premiseId])
}

model PremisesOnTimelines {
  timeline   Timeline @relation(fields: [timelineId], references: [id])
  timelineId String
  premise    Premise  @relation(fields: [premiseId], references: [id])
  premiseId  String
  assignedAt DateTime @default(now())

  @@id([premiseId, timelineId])
}

enum PremiseStatus {
  UNVERIFIED

}

enum Role {
  USER
  ADMIN
}
